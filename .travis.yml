# For details on this setup see https://github.com/hvr/multi-ghc-travis

env:
  - GHCVER=7.6.3
  - GHCVER=7.8.1

matrix:
  allow_failures:
    - env: GHCVER=7.8.1

install:
  - sudo add-apt-repository -y ppa:hvr/ghc
  - sudo apt-get update
  - sudo apt-get install cabal-install-1.18 ghc-$GHCVER
  - export PATH=/opt/ghc/$GHCVER/bin:$PATH
  - cabal-1.18 update
  - cabal-1.18 install --only-dependencies --enable-tests --enable-benchmarks

# Note: the distinction between `before_install` and `install` is not important.
before_install:
  - sudo add-apt-repository -y ppa:hvr/ghc
  - sudo apt-get update
  - sudo apt-get install cabal-install-1.18 ghc-$GHCVER happy
  - export PATH=/opt/ghc/$GHCVER/bin:$PATH
  - cabal-1.18 update
  - cabal-1.18 install happy # haskell-src-exts implicit dependency workaround

install:
  - cabal-1.18 install --only-dependencies --enable-tests --enable-benchmarks

# Here starts the actual work to be performed for the package under test; any command which exits with a non-zero exit code causes the build to fail.
script:
  - cabal-1.18 configure --enable-tests --enable-benchmarks -v2  # -v2 provides useful information for debugging
  - cabal-1.18 build   # this builds all libraries and executables (including tests/benchmarks)
  - cabal-1.18 test
  - cabal-1.18 sdist   # tests that a source-distribution can be generated

# The following scriptlet checks that the resulting source distribution can be built & installed
  - export SRC_TGZ=$(cabal-1.18 info . | awk '{print $2 ".tar.gz";exit}') ;
    cd dist/;
    if [ -f "$SRC_TGZ" ]; then
       cabal-1.18 install "$SRC_TGZ";
    else
       echo "expected '$SRC_TGZ' not found";
       exit 1;
    fi
